<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Job Listings</title>
    <link rel="stylesheet" href="/css/adminD/sidebar.css" />
    <link rel="stylesheet" href="/css/adminD/job_listings.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
      .filter-buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
      }
      
      .filter-left {
        display: flex;
        gap: 10px;
      }
      
      .filter-right {
        display: flex;
        align-items: center;
      }
      
      .feature-select {
        padding: 10px 16px;
        border: 2px solid #e0e7ff;
        border-radius: 8px;
        background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
        font-size: 14px;
        font-weight: 500;
        color: #334155;
        cursor: pointer;
        min-width: 180px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        position: relative;
        appearance: none;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
        background-position: right 12px center;
        background-repeat: no-repeat;
        background-size: 16px;
        padding-right: 40px;
      }
      
      .feature-select:hover {
        border-color: #3949ab;
        background: linear-gradient(135deg, #ffffff 0%, #f1f5f9 100%);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transform: translateY(-1px);
      }
      
      .feature-select:focus {
        outline: none;
        border-color: #3949ab;
        box-shadow: 0 0 0 3px rgba(57, 73, 171, 0.1), 0 4px 8px rgba(0, 0, 0, 0.1);
      }
      
      .feature-dropdown {
        position: relative;
        display: flex;
        align-items: center;
      }
      
      .feature-dropdown::before {
        margin-right: 8px;
        font-size: 16px;
      }
      
      .feature-checkbox-container {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 8px;
        background: #f0f8ff;
        border-radius: 4px;
        border: 1px solid #3949ab;
      }
      
      .feature-checkbox {
        margin: 0;
        cursor: pointer;
      }
      
      .feature-checkbox-container label {
        font-size: 12px;
        color: #3949ab;
        cursor: pointer;
        margin: 0;
      }
    </style>
  </head>
  <body>
    <div class="dashboard-wrapper">
      <%- include('Partials/sidebar', { user: user, activePage:
      'job_listings' }) %>
      <div class="main-content">
        <section id="job_listings" class="section-content active">
          <h1>Job Listings</h1>
          <div class="search-bar" style="margin-bottom: 20px">
            <form
              action="/adminD/job_listings"
              method="GET"
              style="display: flex; align-items: center"
            >
              <input
                type="text"
                name="q"
                placeholder="Search..."
                style="
                  padding: 8px;
                  flex: 1;
                  border: 1px solid #ddd;
                  border-radius: 4px 0 0 4px;
                  background-color: #f0f0f0;
                "
              />
              <button
                type="submit"
                style="
                  padding: 8px;
                  background-color: #3949ab;
                  border: none;
                  border-radius: 0 4px 4px 0;
                  cursor: pointer;
                "
              >
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="white"
                  stroke-width="2"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle cx="11" cy="11" r="8"></circle>
                  <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                </svg>
              </button>
            </form>
          </div>
          <div class="filter-buttons">
            <div class="filter-left">
              <button class="filter-btn" data-filter="all">All</button>
              <button class="filter-btn" data-filter="open">Open</button>
              <button class="filter-btn" data-filter="closed">Closed</button>
            </div>
            <div class="filter-right">
              <div class="feature-dropdown">
                <select id="featureSelect" class="feature-select">
                  <option value="">Feature Job Post</option>
                  <option value="urgent">Urgent</option>
                  <option value="new">New</option>
                  <option value="high-demand">High Demand</option>
                </select>
              </div>
            </div>
          </div>
          <div class="jobs-container">
            <% jobs.forEach(job => { %>
            <div class="job-card" data-status="<%= job.status %>">
              <div class="job-card-left">
                <div class="company-logo">
                  <img
                    src="<%= job.imageUrl || '/assets/company_logo.jpg' %>"
                    alt="Company Logo"
                  />
                </div>
              </div>
              <div class="job-card-center">
                <h3 class="job-title"><%= job.title %></h3>
                <p class="job-salary"><%= job.formattedBudget %></p>
                <div class="job-tags">
                  <% job.description.skills.slice(0, 3).forEach(skill => { %>
                  <span class="job-tag"><%= skill %></span>
                  <% }) %>
                </div>
                <div class="job-details">
                  <span class="job-location">
                    <svg
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M12 2C8.13 2 5 5.13 5 9C5 14.25 12 22 12 22C12 22 19 14.25 19 9C19 5.13 15.87 2 12 2Z"
                      />
                      <circle cx="12" cy="9" r="2" />
                    </svg>
                    <%= job.location || 'Remote' %>
                    <span class="status-dot green"></span>
                  </span>
                  <span class="job-type">
                    <svg
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <rect x="3" y="4" width="18" height="14" rx="2" ry="2" />
                      <line x1="3" y1="8" x2="21" y2="8" />
                    </svg>
                    <%= job.jobType %>
                    <span class="status-dot green"></span>
                  </span>
                  <span class="job-date">
                    <svg
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <circle cx="12" cy="12" r="10" />
                      <path d="M12 6V12L16 14" />
                    </svg>
                    Posted <%= job.formattedDate %>
                    <span class="status-dot green"></span>
                  </span>
                </div>
              </div>
              <div class="job-card-right">
                <div class="applicants-badge">
                  <%= job.applications?.length || 0 %> applicants
                </div>
                <div class="feature-checkbox-container" style="display: none; margin: 10px 0;">
                  <input 
                    type="checkbox" 
                    class="feature-checkbox" 
                    data-job-id="<%= job.jobId %>" 
                    <%= job.featured && job.featured.isActive ? 'checked' : '' %>
                  />
                  <label>Feature this job</label>
                </div>
                <a href="/jobs/<%= job.jobId %>" class="btn-see-more"
                  >See More</a
                >
              </div>
            </div>
            <% }) %>
          </div>
        </section>
      </div>
    </div>
    <script src="/js/adminD/job_listings.js"></script>
    <script>
      // Filter buttons functionality
      document.querySelectorAll(".filter-btn").forEach((button) => {
        button.addEventListener("click", () => {
          document
            .querySelectorAll(".filter-btn")
            .forEach((btn) => btn.classList.remove("active"));
          button.classList.add("active");

          const filter = button.getAttribute("data-filter");
          document.querySelectorAll(".job-card").forEach((card) => {
            if (
              filter === "all" ||
              card.getAttribute("data-status") === filter
            ) {
              card.classList.remove("hidden");
            } else {
              card.classList.add("hidden");
            }
          });
        });
      });

      // Feature dropdown functionality
      const featureSelect = document.getElementById('featureSelect');
      const checkboxContainers = document.querySelectorAll('.feature-checkbox-container');
      
      featureSelect.addEventListener('change', function() {
        const selectedValue = this.value;
        
        if (selectedValue) {
          // Show all checkboxes
          checkboxContainers.forEach(container => {
            container.style.display = 'block';
          });
          
          // Update all checkboxes data attribute
          document.querySelectorAll('.feature-checkbox').forEach(checkbox => {
            checkbox.setAttribute('data-feature-type', selectedValue);
          });
        } else {
          // Hide all checkboxes
          checkboxContainers.forEach(container => {
            container.style.display = 'none';
          });
        }
      });

      // Handle checkbox changes
      document.querySelectorAll('.feature-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
          const jobId = this.getAttribute('data-job-id');
          const featureType = this.getAttribute('data-feature-type');
          const isChecked = this.checked;
          
          // Send AJAX request to update feature status
          fetch('/adminD/jobs/feature', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              jobId: jobId,
              featureType: featureType,
              isActive: isChecked
            })
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
                console.log('Job feature status updated successfully');
                // Show correct message for feature/unfeature
                if (isChecked) {
                  showNotification('Job featured successfully!', 'success');
                } else {
                  showNotification('Job unfeatured successfully!', 'success');
                }
            } else {
              console.error('Error updating job feature status:', data.message);
              // Revert checkbox state
              this.checked = !isChecked;
              showNotification('Error updating job feature status', 'error');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            // Revert checkbox state
            this.checked = !isChecked;
            showNotification('Network error occurred', 'error');
          });
        });
      });

      // Notification function
      function showNotification(message, type) {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.textContent = message;
        notification.style.cssText = `
          position: fixed;
          top: 20px;
          right: 20px;
          padding: 15px 20px;
          background: ${type === 'success' ? '#4CAF50' : '#f44336'};
          color: white;
          border-radius: 4px;
          z-index: 1000;
          font-size: 14px;
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
          notification.remove();
        }, 3000);
      }
    </script>
  </body>
</html>
