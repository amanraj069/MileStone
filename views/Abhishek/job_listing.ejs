<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Job Listings - Dashboard</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background: #f8f9fa;
        color: #333;
      }

      .main-content {
        margin-left: 260px;
        padding: 30px;
        min-height: 100vh;
      }

      .page-header {
        background: white;
        padding: 25px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
        border-left: 4px solid #2563eb;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .page-title {
        font-size: 28px;
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
      }

      .page-subtitle {
        color: #666;
        font-size: 16px;
      }

      .content-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 30px;
        margin-bottom: 20px;
      }

      .btn {
        padding: 12px 24px;
        border: none;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        text-align: center;
      }

      .btn-primary {
        background: linear-gradient(45deg, #2563eb, #1e40af);
        color: white;
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(37, 99, 235, 0.4);
      }

      .search-filter-section {
        display: flex;
        gap: 20px;
        margin-bottom: 30px;
        align-items: center;
        flex-wrap: wrap;
      }

      .search-input {
        flex: 1;
        min-width: 300px;
        padding: 12px 15px;
        border: 2px solid #e1e5e9;
        border-radius: 8px;
        font-size: 14px;
      }

      .search-input:focus {
        outline: none;
        border-color: #2563eb;
      }

      .filter-buttons {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
      }

      .filter-btn {
        padding: 8px 16px;
        border: 2px solid #e1e5e9;
        background: white;
        border-radius: 20px;
        font-size: 13px;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .filter-btn.active,
      .filter-btn:hover {
        background: #2563eb;
        border-color: #2563eb;
        color: white;
      }

      .job-card {
        border: 2px solid #e1e5e9;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
        display: flex;
        gap: 20px;
        align-items: center;
      }

      .job-card:hover {
        border-color: #2563eb;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      }

      .job-img-container {
        flex-shrink: 0;
      }

      .job-img {
        width: 60px;
        height: 60px;
        border-radius: 8px;
        object-fit: cover;
      }

      .job-info {
        flex: 1;
      }

      .job-title {
        font-size: 18px;
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
      }

      .job-price {
        color: #2563eb;
        font-weight: 600;
        font-size: 16px;
        margin-bottom: 10px;
      }

      .job-tech {
        display: flex;
        gap: 8px;
        margin-bottom: 10px;
        flex-wrap: wrap;
      }

      .tech-tag {
        background: #f1f3f4;
        color: #555;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 12px;
      }

      .job-meta {
        display: flex;
        gap: 15px;
        color: #666;
        font-size: 13px;
        flex-wrap: wrap;
      }

      .job-meta span {
        display: flex;
        align-items: center;
        gap: 5px;
      }

      .job-meta i {
        color: #2563eb;
      }

      .job-actions {
        flex-shrink: 0;
        text-align: center;
      }

      .applications-count {
        display: block;
        color: #666;
        font-size: 13px;
        margin-bottom: 10px;
      }

      .see-more-btn {
        background: transparent;
        border: 2px solid #2563eb;
        color: #2563eb;
        padding: 8px 16px;
        border-radius: 6px;
        font-size: 13px;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .see-more-btn:hover {
        background: #2563eb;
        color: white;
      }

      .no-jobs {
        text-align: center;
        padding: 50px;
        color: #666;
      }

      .no-jobs i {
        font-size: 48px;
        color: #ddd;
        margin-bottom: 20px;
      }

      /* Action buttons container */
      .action-buttons {
        display: flex;
        gap: 10px;
        align-items: center;
      }

      /* Delete button styles */
      .delete-job-btn {
        background: #dc3545;
        color: white;
        border: none;
        padding: 8px 12px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 13px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .delete-job-btn:hover {
        background: #c82333;
        transform: translateY(-1px);
      }

      .delete-job-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none !important;
      }

      /* Loading screen styles */
      .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 80px 20px;
        text-align: center;
      }

      .loading-spinner {
        font-size: 48px;
        color: #2563eb;
        margin-bottom: 20px;
      }

      .loading-spinner i {
        animation: spin 1s linear infinite;
      }

      .loading-text {
        font-size: 16px;
        color: #666;
        margin: 0;
      }

      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }

      /* Hide loading screen initially */
      .loading-container.hidden {
        display: none;
      }
    </style>
  </head>
  <body>
    <%- include('partials/sidebar', { user: user, activePage: 'job_listings' })
    %>

    <div class="main-content">
      <div class="page-header">
        <div>
          <h2 class="page-title">Job Listings</h2>
          <p class="page-subtitle">Browse and manage your posted job opportunities</p>
        </div>
        <a href="/employerD/job_listings/new" class="btn btn-primary">
          <i class="fas fa-plus"></i>
          Post New Job
        </a>
      </div>

      <div class="content-card">
        <div class="search-filter-section">
          <input
            type="text"
            class="search-input"
            placeholder="Search jobs, companies..."
          />

          <div class="filter-buttons">
            <button class="filter-btn active">All Jobs</button>
            <button class="filter-btn">Recent</button>
            <button class="filter-btn">Remote</button>
            <button class="filter-btn">Full-time</button>
            <button class="filter-btn">Part-time</button>
          </div>
        </div>

        <!-- Loading Screen -->
        <div id="loading-screen" class="loading-container">
          <div class="loading-spinner">
            <i class="fas fa-spinner fa-spin"></i>
          </div>
          <p class="loading-text">Loading job listings...</p>
        </div>

        <!-- Job listings will be populated here by JavaScript -->
        <div id="job-listings-container"></div>
      </div>
    </div>

    <script>
      let jobListingsData = [];
      let jobApplicationsData = [];

      document.addEventListener('DOMContentLoaded', function() {
        // Initialize the page
        loadJobListings();
        setupEventListeners();
      });

      async function loadJobListings() {
        const loadingScreen = document.getElementById('loading-screen');
        const container = document.getElementById('job-listings-container');
        
        try {
          // Show loading screen
          loadingScreen.style.display = 'flex';
          container.innerHTML = '';

          // Fetch data from API
          console.log('Fetching job listings from API...');
          const response = await fetch('/employerD/job_listings/api/data');
          
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }

          const result = await response.json();
          console.log('API Response:', result);

          if (result.success) {
            jobListingsData = result.data.jobListings;
            jobApplicationsData = result.data.jobApplications;
            
            // Hide loading screen
            loadingScreen.style.display = 'none';
            
            // Render job listings
            renderJobListings();
          } else {
            throw new Error(result.message || 'Failed to fetch job listings');
          }
        } catch (error) {
          console.error('Error loading job listings:', error);
          loadingScreen.style.display = 'none';
          showError('Failed to load job listings. Please try again later.');
        }
      }

      function renderJobListings() {
        const container = document.getElementById('job-listings-container');
        
        if (!jobListingsData || jobListingsData.length === 0) {
          container.innerHTML = `
            <div class="no-jobs">
              <i class="fas fa-briefcase"></i>
              <h3>No job listings found</h3>
              <p>Start by posting your first job opportunity!</p>
            </div>
          `;
          return;
        }

        container.innerHTML = jobListingsData.map(job => {
          const applicationsCount = jobApplicationsData.filter(app => app.jobId === job.jobId).length;
          const daysAgo = Math.floor((Date.now() - new Date(job.postedDate)) / (1000 * 60 * 60 * 24));
          
          return `
            <div class="job-card" data-job-id="${job.jobId}">
              <div class="job-img-container">
                <img
                  src="${job.imageUrl || '/assets/company_logo.jpg'}"
                  alt="Company"
                  class="job-img"
                />
              </div>

              <div class="job-info">
                <h3 class="job-title">${job.title}</h3>
                <div class="job-price">
                  ₹${job.budget.amount.toLocaleString('en-IN')} (${job.budget.period})
                </div>

                <div class="job-tech">
                  ${job.description.skills.slice(0, 3).map(skill => `
                    <span class="tech-tag">${skill}</span>
                  `).join('')}
                </div>

                <div class="job-meta">
                  <span>
                    <i class="fas fa-map-marker-alt"></i>
                    ${job.location || 'Not specified'}
                  </span>
                  <span>
                    <i class="fas fa-briefcase"></i>
                    ${job.jobType}
                  </span>
                  <span>
                    <i class="fas fa-calendar"></i>
                    Posted ${daysAgo} days ago
                  </span>
                </div>
              </div>

              <div class="job-actions">
                <span class="applications-count">
                  ${applicationsCount} applicants
                </span>
                <div class="action-buttons">
                  <a href="/jobs/${job.jobId}">
                    <button class="see-more-btn">See More</button>
                  </a>
                  <button class="delete-job-btn" onclick="deleteJob('${job.jobId}', this)" title="Delete Job">
                    <i class="fas fa-trash"></i>
                  </button>
                </div>
              </div>
            </div>
          `;
        }).join('');

        // Setup search and filter functionality
        setupSearchAndFilter();
      }

      function setupEventListeners() {
        // Placeholder animation for search input
        const searchInput = document.querySelector('.search-input');
        const placeholders = [
          'Search jobs, companies...',
          'Try "React", "Node.js"...',
          'Search by location...',
          'Find your next opportunity...'
        ];
        
        let placeholderIndex = 0;
        
        function animatePlaceholder() {
          if (searchInput && searchInput.value === '') {
            searchInput.placeholder = placeholders[placeholderIndex];
            placeholderIndex = (placeholderIndex + 1) % placeholders.length;
          }
        }
        
        setInterval(animatePlaceholder, 3000);
      }

      function setupSearchAndFilter() {
        const searchInput = document.querySelector('.search-input');
        const filterButtons = document.querySelectorAll('.filter-btn');
        let currentFilter = 'All Jobs';

        // Search functionality
        searchInput?.addEventListener('input', filterJobs);

        // Filter button functionality
        filterButtons.forEach(button => {
          button.addEventListener('click', function() {
            filterButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            currentFilter = this.textContent.trim();
            filterJobs();
          });
        });

        function filterJobs() {
          const searchTerm = searchInput.value.toLowerCase().trim();
          const jobCards = document.querySelectorAll('.job-card');
          let visibleCount = 0;

          jobCards.forEach(card => {
            const jobTitle = card.querySelector('.job-title').textContent.toLowerCase();
            const jobPrice = card.querySelector('.job-price').textContent.toLowerCase();
            const techTags = Array.from(card.querySelectorAll('.tech-tag')).map(tag => tag.textContent.toLowerCase());
            const jobMeta = card.querySelector('.job-meta').textContent.toLowerCase();

            const matchesSearch = searchTerm === '' || 
              jobTitle.includes(searchTerm) || 
              jobPrice.includes(searchTerm) || 
              techTags.some(tag => tag.includes(searchTerm)) ||
              jobMeta.includes(searchTerm);

            const matchesFilter = checkFilterMatch(card, currentFilter);

            if (matchesSearch && matchesFilter) {
              card.style.display = 'flex';
              visibleCount++;
            } else {
              card.style.display = 'none';
            }
          });

          updateNoResultsMessage(visibleCount, jobCards.length);
        }

        function checkFilterMatch(card, filter) {
          const jobMeta = card.querySelector('.job-meta').textContent.toLowerCase();
          const metaText = card.querySelector('.job-meta').textContent;
          const match = metaText.match(/Posted (\d+) days ago/);
          const postedDaysAgo = match ? parseInt(match[1]) : 0;

          switch (filter) {
            case 'All Jobs': return true;
            case 'Recent': return postedDaysAgo <= 7;
            case 'Remote': return jobMeta.includes('remote');
            case 'Full-time': return jobMeta.includes('full-time');
            case 'Part-time': return jobMeta.includes('part-time');
            default: return true;
          }
        }

        function updateNoResultsMessage(visibleCount, totalCount) {
          let noResultsMsg = document.querySelector('.no-results-message');
          
          if (visibleCount === 0 && totalCount > 0) {
            if (!noResultsMsg) {
              noResultsMsg = document.createElement('div');
              noResultsMsg.className = 'no-results-message';
              noResultsMsg.innerHTML = `
                <div class="no-jobs" style="margin-top: 30px;">
                  <i class="fas fa-search"></i>
                  <h3>No jobs found</h3>
                  <p>Try adjusting your search or filter criteria</p>
                </div>
              `;
              document.getElementById('job-listings-container').appendChild(noResultsMsg);
            }
            noResultsMsg.style.display = 'block';
          } else if (noResultsMsg) {
            noResultsMsg.style.display = 'none';
          }
        }
      }

      function showError(message) {
        const container = document.getElementById('job-listings-container');
        container.innerHTML = `
          <div class="no-jobs">
            <i class="fas fa-exclamation-triangle" style="color: #dc3545;"></i>
            <h3>Error Loading Job Listings</h3>
            <p>${message}</p>
            <button class="btn btn-primary" onclick="loadJobListings()" style="margin-top: 15px;">
              <i class="fas fa-refresh"></i> Try Again
            </button>
          </div>
        `;
      }

      // Simple delete job function
      async function deleteJob(jobId, buttonElement) {
        if (!confirm('Are you sure you want to delete this job listing?')) {
          return;
        }

        const jobCard = buttonElement.closest('.job-card');
        
        try {
          buttonElement.disabled = true;
          buttonElement.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';

          const response = await fetch(`/employerD/job_listings/delete/${jobId}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            }
          });

          if (response.ok) {
            jobCard.style.transition = 'all 0.5s ease';
            jobCard.style.transform = 'translateX(-100%)';
            jobCard.style.opacity = '0';
            
            setTimeout(() => {
              jobCard.remove();
              const remainingJobs = document.querySelectorAll('.job-card');
              if (remainingJobs.length === 0) {
                document.getElementById('job-listings-container').innerHTML = `
                  <div class="no-jobs">
                    <i class="fas fa-briefcase"></i>
                    <h3>No job listings found</h3>
                    <p>Start by posting your first job opportunity!</p>
                  </div>
                `;
              }
            }, 500);
            
            alert('Job listing deleted successfully!');
          } else {
            throw new Error('Failed to delete job');
          }
        } catch (error) {
          console.error('Delete job error:', error);
          alert('Failed to delete job. Please try again.');
          buttonElement.disabled = false;
          buttonElement.innerHTML = '<i class="fas fa-trash"></i>';
        }
      }
    </script>
  </body>
</html>